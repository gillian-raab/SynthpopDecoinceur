% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeneralTransposingFunctions.R
\name{Generaltransposefunction}
\alias{Generaltransposefunction}
\title{General Transpose function}
\usage{
Generaltransposefunction(tableA, id1, id2)
}
\arguments{
\item{id1}{A list of variables (rows)}

\item{id2}{A list of variables (columns of the transposed table)}

\item{table}{A dataframe}
}
\value{
A list: first element of the list is a dataframe, the transposed version of the orioginal table. Second element is a key to allow back transposition
}
\description{
General Transpose function
}
\examples{
N<-100;tableA<-data.frame(id1a=as.factor(sample(30,N, replace=TRUE)),
id1b=as.factor(sample(4,N, replace=TRUE)),
id2a=sample(letters[1:3],N,replace=TRUE),
id2b=sample(letters[1:4],N,replace=TRUE),
cont1=rchisq(N,1),
cont2=rchisq(N,1),
factor1=as.factor(sample(letters[1:3],N,replace=TRUE)),
factor2=as.factor(sample(letters[1:4],N,replace=TRUE)),
char1=sample(letters[1:3],N,replace=TRUE),
char2=sample(letters[1:4],N,replace=TRUE),stringsAsFactors=FALSE)
#Add missing
tableA[5:10]<-lapply(tableA[5:10], function(x){x[sample(N,10)]<-NA;x})
id1=c("id1a","id1b")
id2=c("id2a","id2b")
toto<-Generaltransposefunction(tableA,id1,id2)
}
